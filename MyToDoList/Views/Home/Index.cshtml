@model MyToDoList.ViewModels.HomeViewModels.IndexViewModel
@{
    ViewBag.Title = "MyToDoList";
}
<head>
    <link href="~/Styles/Home-Index.css" rel="stylesheet" />
</head>
<div id="ValSum" asp-validation-summary="All">

</div>
<h1>@Model.CurrentWeek.Date.Date</h1>
<div class="container-fluid">
    <div class="row">
        <div class="col-sm-8">
            @if (Model.OverdueDuties.Any())
            {
                var iteration = 0;
            <div id="OverDueDuties" class="panel panel-danger">
                <div class="panel-heading">
                    <h3 class="panel-title">Zaległe</h3>
                    </div>
                <div class="panel-body">
                    <table class="table table-bordered">
                        <tr>
                            <th style="text-align:center;" class="col-sm-1">#</th>
                            <th class="col-sm-6">Treść</th>
                            <th class="col-sm-3">Kategoria</th>
                            <th style="text-align:center;" class="col-sm-1">Wykonaj</th>
                            <th style="text-align:center;" class="col-sm-1">Inne</th>
                        </tr>
                        @foreach (var duty in Model.OverdueDuties)
                        {
                            iteration++;
                            <form method="post">
                                    <tr>
                                        <td style="text-align:center;">@iteration</td>
                                        <td>@duty.Content</td>
                                        <td>@duty.Category.Name</td>
                                        <td align="center">
                                            <button type="submit" class="btn btn-default InvisibleButton" asp-action="ExecuteOverdueDuty" asp-controller="Home" asp-route-id="@duty.Id">
                                                <span  class="glyphicon glyphicon-ok" aria-hidden="true"></span>
                                            </button>
                                        </td>
                                        <td align="center">
                                            <div class="dropdown">
                                                <button class="btn btn-default dropdown-toggle" type="button" id="dropdownMenu1" data-toggle="dropdown" aria-haspopup="true" aria-expanded="true">
                                                    ...
                                                    <span class="caret"></span>
                                                </button>
                                                <ul class="dropdown-menu" aria-labelledby="dropdownMenu1">

                                                    <li>
                                                        <button type="submit" class="btn btn-danger" asp-action="RemoveDuty" asp-controller="Home" asp-route-id="@duty.Id">
                                                            Usuń
                                                        </button>
                                                    </li>
                                                    <li class="dropdown-header">Przenieś na:</li>
                                                    <li>
                                                        @await Component.InvokeAsync("ChangeDay", new { day = Day.Monday, dutyId = duty.Id, dayNameToDisplay = "Poniedziałek" })
                                                    </li>
                                                    <li>
                                                        @await Component.InvokeAsync("ChangeDay", new { day = Day.Tuesday, dutyId = duty.Id, dayNameToDisplay = "Wtorek" })
                                                    </li>
                                                    <li>
                                                        @await Component.InvokeAsync("ChangeDay", new { day = Day.Wednesday, dutyId = duty.Id, dayNameToDisplay = "Środa" })
                                                    </li>
                                                    <li>
                                                        @await Component.InvokeAsync("ChangeDay", new { day = Day.Thursday, dutyId = duty.Id, dayNameToDisplay = "Czwartek" })
                                                    </li>
                                                    <li>
                                                        @await Component.InvokeAsync("ChangeDay", new { day = Day.Friday, dutyId = duty.Id, dayNameToDisplay = "Piątek" })
                                                    </li>
                                                    <li>
                                                        @await Component.InvokeAsync("ChangeDay", new { day = Day.Saturday, dutyId = duty.Id, dayNameToDisplay = "Sobota" })
                                                    </li>
                                                    <li>
                                                        @await Component.InvokeAsync("ChangeDay", new { day = Day.Sunday, dutyId = duty.Id, dayNameToDisplay = "Niedziela" })
                                                    </li>

                                                </ul>
                                            </div>

                                        </td>
                                    </tr>
                            </form>

                        }
                    </table>
                </div>
                </div>
            }
                    @await Component.InvokeAsync("Day");
                </div>
                <div class="col-sm-4">
                    @await Component.InvokeAsync("Category")
                </div>

            </div>
        </div>
