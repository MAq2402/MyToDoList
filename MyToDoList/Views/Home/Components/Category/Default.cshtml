@model CategoryViewModel
<head>
    <link href="~/Styles/Home-Components-Category-Default.css" rel="stylesheet" />
    <script src="~/node_modules/chart.js/dist/Chart.min.js"></script>
    
</head>
<h1>Kategorie</h1>
<ul class="list-group">
    @foreach (var category in Model.Categories)
    {
        <a class="LinkToCategory" asp-action="Index" asp-controller="Category" asp-route-id="@category.Id">
            <li class="list-group-item">
                <span class="glyphicon glyphicon-star" aria-hidden="true"></span>
                @category.Name
                <span class="badge">@category.Duties.Count</span>
            </li>
        </a>
    }
    
</ul>
<form method="post" asp-action="AddCategory" asp-controller="Home" asp-antiforgery="true" class="form-horizontal">
    <div>
        <div class="input-group">

            <span class="input-group-btn">
                <button class="btn btn-danger" type="submit">Dodaj kategorie</button>
            </span>
            <input id="InputForCategoryName" asp-for="@Model.NewCategoryName" type="text" class="form-control" placeholder="Nazwa kateogrii">
        </div>

    </div>
    <div asp-validation-summary="All">
    </div>
</form>
<h1>Wykresy</h1>
<canvas id="myChartDuties"></canvas>
<canvas id="myChartDutiesInCategory"></canvas>
<script>
    var ctx = document.getElementById('myChartDuties').getContext('2d');
    var chart = new Chart(ctx, {
        // The type of chart we want to create
        type: 'bar',

        // The data for our dataset
        data: {
            labels: ["Poniedziałek", "Wtorek", "Środa", "Czwartek", "Piątek", "Sobota", "Niedziela"],
            datasets: [{
                label: "Zadania",
                backgroundColor: 'rgb(217, 83, 79)',
                borderColor: 'rgb(212, 63, )',
                data: [
                        @Model.Duties.Where(d=>d.Day == Day.Monday).Count(),
                        @Model.Duties.Where(d=>d.Day == Day.Tuesday).Count(),
                        @Model.Duties.Where(d=>d.Day == Day.Wednesday).Count(),
                        @Model.Duties.Where(d=>d.Day == Day.Thursday).Count(),
                        @Model.Duties.Where(d=>d.Day == Day.Friday).Count(),
                        @Model.Duties.Where(d=>d.Day == Day.Saturday).Count(),
                        @Model.Duties.Where(d=>d.Day == Day.Sunday).Count(),
                ],
            }]
        },

        // Configuration options go here
        options: {}
    });
</script>
<script>
    @{
        //IEnumerable<string> categoryName =
        string Json = JsonConvert.SerializeObject(new List<string>() {"value1","value2" });
        
    }
    var ctx = document.getElementById('myChartDutiesInCategory').getContext('2d');
    var chart = new Chart(ctx, {
        // The type of chart we want to create
        type: 'bar',

        // The data for our dataset
        data: {
            labels: [],
            datasets: [{
                label: "Zadania",
                backgroundColor: 'rgb(217, 83, 79)',
                borderColor: 'rgb(212, 63, )',
                data: [
                        @Model.Duties.Where(d=>d.Day == Day.Monday).Count(),
                        @Model.Duties.Where(d=>d.Day == Day.Tuesday).Count(),
                        @Model.Duties.Where(d=>d.Day == Day.Wednesday).Count(),
                        @Model.Duties.Where(d=>d.Day == Day.Thursday).Count(),
                        @Model.Duties.Where(d=>d.Day == Day.Friday).Count(),
                        @Model.Duties.Where(d=>d.Day == Day.Saturday).Count(),
                        @Model.Duties.Where(d=>d.Day == Day.Sunday).Count(),
                ],
            }]
        },

        // Configuration options go here
        options: {}
    });
</script>

