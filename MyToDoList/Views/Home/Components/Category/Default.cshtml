@model CategoryViewModel
<head>
    
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8">

    <link href="~/Styles/Home-Components-Category-Default.css" rel="stylesheet" />
    <script src="~/node_modules/chart.js/dist/Chart.min.js"></script>
    
</head>
<h1>Kategorie</h1>
<ul class="list-group">
    @foreach (var category in Model.Categories)
    {
        var NumberOfCategoryDuties = category.OverdueDuties.Count() + category.Duties.Count();
        <a class="LinkToCategory" asp-action="Index" asp-controller="Category" asp-route-id="@category.Id">
            <li class="list-group-item">
                <span class="glyphicon glyphicon-star" aria-hidden="true"></span>
                @category.Name
                <span class="badge">@NumberOfCategoryDuties</span>
            </li>
        </a>
    }
    
</ul>
<form method="post" asp-action="AddCategory" asp-controller="Home" asp-antiforgery="true" class="form-horizontal">
    <div>
        <div class="input-group">

            <span class="input-group-btn">
                <button class="btn btn-danger" type="submit">Dodaj kategorie</button>
            </span>
            <input id="InputForCategoryName" asp-for="@Model.NewCategoryName" type="text" class="form-control" placeholder="Nazwa kateogrii">
        </div>

    </div>
</form>
<h1>Wykresy</h1>
<canvas id="myChartDuties"></canvas>
<canvas id="myChartDutiesDone"></canvas>
<canvas id="myChartDutiesInCategory"></canvas>

<script>
    var ctx = document.getElementById('myChartDuties').getContext('2d');
    var chart = new Chart(ctx, {
        // The type of chart we want to create
        type: 'bar',

        // The data for our dataset
        data: {
            labels: ["Poniedziałek", "Wtorek", "Środa", "Czwartek", "Piątek", "Sobota", "Niedziela"],
            datasets: [{
                label: "Liczba zadań w dniach",
                backgroundColor: 'rgb(217, 83, 79)',
                borderColor: 'rgb(212, 63, )',
                data: [
                        @Model.Duties.Where(d => d.Day == Day.Monday).Count(),
                        @Model.Duties.Where(d => d.Day == Day.Tuesday).Count(),
                        @Model.Duties.Where(d => d.Day == Day.Wednesday).Count(),
                        @Model.Duties.Where(d => d.Day == Day.Thursday).Count(),
                        @Model.Duties.Where(d => d.Day == Day.Friday).Count(),
                        @Model.Duties.Where(d => d.Day == Day.Saturday).Count(),
                        @Model.Duties.Where(d => d.Day == Day.Sunday).Count(),
                ],
            }]
        },

        // Configuration options go here
        options: {
            scales: {
                yAxes: [{
                    display: true,
                    ticks: {
                        suggestedMin: 0,    // minimum will be 0, unless there is a lower value.
                        // OR //
                        beginAtZero: true   // minimum value will be 0.
                    }
                }]
            }
        }
    });
</script>
<script>

        var LabelArray =[];
        @{
            foreach (var category in Model.Categories)
            {
                for(int i = 0;i<category.Name.Length;i++)
                {
                    if(category.Name[i]=='ó')
                    {
                        category.Name = category.Name.Replace('ó', 'o');

                    }
                    if (category.Name[i] == 'ś')
                    {

                        category.Name = category.Name.Replace('ś', 's');
                    }
                    if (category.Name[i] == 'ć')
                    {
                        category.Name = category.Name.Replace('ć', 'c');

                    }
                    if (category.Name[i] == 'ż')
                    {
                        category.Name = category.Name.Replace('ż', 'z');

                    }
                    if (category.Name[i] == 'ź')
                    {
                        category.Name = category.Name.Replace('ź', 'z');

                    }
                    if (category.Name[i] == 'ą')
                    {

                        category.Name = category.Name.Replace('ą', 'a');
                    }
                    if (category.Name[i] == 'ę')
                    {

                        category.Name = category.Name.Replace('ę', 'e');
                    }




                }


             @:LabelArray.push("@category.Name");
                 

            }
        }
        var DataLabel = []
        @{ 
            foreach (var category in Model.Categories)
            {
                var NumberOfCategoryDuties = category.OverdueDuties.Count() + category.Duties.Count();
                @:DataLabel.push("@NumberOfCategoryDuties");

            }
        }

        var ctx = document.getElementById('myChartDutiesInCategory').getContext('2d');
        
                    var chart = new Chart(ctx, {
        // The type of chart we want to create
                        type: 'bar',

                        // The data for our dataset
                        data: {

                            labels: LabelArray,
                            datasets: [{
                label: "Liczba zadań w kategoriach",
                                backgroundColor: 'rgb(217, 83, 79)',
                                borderColor: 'rgb(212, 63, )',
                                data: DataLabel,
            }]
        },

        // Configuration options go here
                        options: {
                            scales: {
                                yAxes: [{
                                    display: true,
                                    ticks: {
                                        suggestedMin: 0,    // minimum will be 0, unless there is a lower value.
                                        // OR //
                                        beginAtZero: true   // minimum value will be 0.
                                    }
                                }]
                            }
                        }
    });
</script>
<script>
    var ctx = document.getElementById('myChartDutiesDone').getContext('2d');
    var chart = new Chart(ctx, {
        // The type of chart we want to create
        type: 'bar',

        // The data for our dataset
        data: {
            labels: ["Poniedziałek", "Wtorek", "Środa", "Czwartek", "Piątek", "Sobota", "Niedziela"],
            datasets: [{
                label: "Liczba wykonanych zadań w dniach",
                backgroundColor: 'rgb(217, 83, 79)',
                borderColor: 'rgb(212, 63, )',
                data: [
                        @Model.Archive.MondayDoneDuties,
                        @Model.Archive.TuesdayDoneDuties,
                        @Model.Archive.WednesdayDoneDuties,
                        @Model.Archive.ThursdayDoneDuties,
                        @Model.Archive.FridayDoneDuties,
                        @Model.Archive.SaturdayDoneDuties,
                        @Model.Archive.SundayDoneDuties,
                ],
            }]
        },

        // Configuration options go here
        options: {
            scales: {
                yAxes: [{
                    display: true,
                    ticks: {
                        suggestedMin: 0,    // minimum will be 0, unless there is a lower value.
                        // OR //
                        beginAtZero: true   // minimum value will be 0.
                    }
                }]
            }
        }
    });
</script>

